Customer Segmentation:
	  SELECT Gender,avg(Line_Item * Quantity) AS AvgOrderValue,COUNT(Order_Number) AS PurchaseFrequency FROM guvi_projects_dataspark.Sales JOIN guvi_projects_dataspark.customers ON Sales.CustomerKey = Customer.CustomerKey 
	  GROUP BY Gender;

Customer Distribution by State:
	SELECT c.State, COUNT(DISTINCT c.CustomerKey) AS Customer_Count FROM guvi_projects_dataspark.customers c
	GROUP BY c.State
	ORDER BY Customer_Count DESC;

Customer Acquisition by Year:
	SELECT YEAR(c.Birthday) AS Year, COUNT(DISTINCT c.CustomerKey) AS New_Customers FROM guvi_projects_dataspark.customers c WHERE c.Birthday IS NOT NULL
	GROUP BY Year
	ORDER BY Year DESC;

Top 50 Customers by Revenue:
	SELECT c.Name, SUM(s.Quantity * p.Unit_Price_USD) AS Customer_Revenue FROM guvi_projects_dataspark.sales s
	JOIN guvi_projects_dataspark.customers c ON s.CustomerKey = c.CustomerKey
	JOIN guvi_projects_dataspark.products p ON s.ProductKey = p.ProductKey
	GROUP BY c.Name
	ORDER BY Customer_Revenue DESC LIMIT 50;	

Overall Sales Performance:
	SELECT DATE_FORMAT(Order_Date, '%Y-%m') AS Month,SUM(Unit_Price_USD * Quantity) AS TotalSales FROM guvi_projects_dataspark.Sales JOIN guvi_projects_dataspark.Products 
	ON Sales.ProductKey = Products.ProductKey GROUP BY Month ORDER BY Month;	

Sales by Store:
	SELECT st.State, SUM(s.Quantity * p.Unit_Price_USD) AS Store_Revenue FROM guvi_projects_dataspark.sales s
	JOIN guvi_projects_dataspark.stores st ON s.StoreKey = st.StoreKey
	JOIN guvi_projects_dataspark.products p ON s.ProductKey = p.ProductKey
	GROUP BY st.State
	ORDER BY Store_Revenue DESC;

Sales by Category:
	SELECT p.Category, SUM(s.Quantity * p.Unit_Price_USD) AS Category_Revenue FROM guvi_projects_dataspark.sales s JOIN guvi_projects_dataspark.products p ON s.ProductKey = p.ProductKey
	GROUP BY p.Category ORDER BY Category_Revenue DESC;		

Average Sales Price Per Product:
	SELECT p.Product_Name, AVG(p.Unit_Price_USD) AS Avg_Price FROM guvi_projects_dataspark.products p
	GROUP BY p.Product_Name
	ORDER BY Avg_Price DESC;

Top Performing Products:
	SELECT p.Product_Name, SUM(s.Quantity) AS Total_Sold FROM guvi_projects_dataspark.sales s JOIN guvi_projects_dataspark.products p ON s.ProductKey = p.ProductKey
	GROUP BY p.Product_Name ORDER BY Total_Sold DESC LIMIT 10;

Top 10 Product Performance by Store:
	SELECT st.State, p.Product_Name, SUM(s.Quantity) AS Total_Sold FROM guvi_projects_dataspark.sales s
	JOIN guvi_projects_dataspark.stores st ON s.StoreKey = st.StoreKey
	JOIN guvi_projects_dataspark.products p ON s.ProductKey = p.ProductKey
	GROUP BY st.State, p.Product_Name
	ORDER BY Total_Sold DESC LIMIT 10;

Revenue by Product:
	SELECT p.Product_Name, SUM(s.Quantity * p.Unit_Price_USD) AS Total_Revenue FROM guvi_projects_dataspark.sales s JOIN guvi_projects_dataspark.products p ON s.ProductKey = p.ProductKey
	GROUP BY p.Product_Name ORDER BY Total_Revenue DESC;

Top Products by Profit Margin:
	SELECT p.Product_Name, (p.Unit_Price_USD - p.Unit_Cost_USD) AS Profit_Margin, SUM(s.Quantity) AS Units_Sold FROM guvi_projects_dataspark.sales s
	JOIN guvi_projects_dataspark.products p ON s.ProductKey = p.ProductKey
	GROUP BY p.Product_Name, Profit_Margin
	ORDER BY Profit_Margin DESC, Units_Sold DESC;
					

